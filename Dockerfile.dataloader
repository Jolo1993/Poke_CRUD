# Build stage
FROM python:3.12-slim as builder

WORKDIR /build

# Set pip configuration for better caching and reduced layer size
ENV PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
COPY requirement.txt .
RUN pip install --upgrade pip wheel && \
    pip wheel --wheel-dir=/build/wheels -r requirement.txt

# Install local library into wheels
COPY local_libs/ /local_libs/
RUN pip wheel --wheel-dir=/build/wheels -e /local_libs/

# Runtime stage
FROM python:3.12-slim AS runtime

# Add metadata labels
LABEL description="Pokemon Data Loader"
LABEL version="0.1.0"

# Create a non-root user with specific UID/GID for Kubernetes security contexts
RUN groupadd -r -g 10001 appuser && useradd -r -u 10001 -g appuser appuser

# Set environment variables for Python behavior
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app

# Create working directory
WORKDIR /app

# Copy wheels from builder stage and install
COPY --from=builder /build/wheels /wheels
RUN pip install --no-index --find-links=/wheels/ /wheels/* && \
    rm -rf /wheels

# Copy only the necessary files
COPY data_loader/pokemon_api.py .
COPY schema.json .
COPY --from=builder /local_libs /local_libs

# Create any required directories and set correct permissions
RUN mkdir -p /app/data && \
    chown -R appuser:appuser /app

# Switch to non-root user for security
USER 10001

# Provide ability to pass arguments to script
ENTRYPOINT ["python", "pokemon_api.py"]
# Default command line arguments if none provided
CMD ["--all"]
